//Javascript
const fib=(n,memo={})=>{
    if(n in memo) return memo[n];
    if (n<=2) return 1;
    memo[n]=fib(n-1,memo)+fib(n-2,memo);
    return memo[n];
};

console.log(fib(6));

//javascript normal
const fib2=(n)=>{
    if (n<=2) return 1;
    return fib2(n-1)+fib2(n-2);
  };
console.log(fib(50));


//Java in DP
import java.util.*;
public class Fibonacci_dp
{
    public static void main(String args[])
    {
        int n=0;
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the number to find the fibonacci number:");
        n=sc.nextInt();
        System.out.println(n+"th Fibonacci="+fib(n));
    }
    static int fib(int n)
    {
        int f[]=new int[n+2];
        int i;
        f[0]=0;
        f[1]=1;
        for(i=2;i<=n;i++)
        {
            f[i]=f[i-1]+f[i-2];
        }
        return f[n];
    }
}

//Java normal
import java.util.*;
public class Fibonacci_recursion
{
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        long n=0;
        System.out.println("Enter the number to find the fibonacci number:");
        n=sc.nextLong();
        System.out.println(fib(n));
    }
    static long fib(long n)
    {
       if (n <= 1)
        return n;
       return fib(n-1) + fib(n-2);
    }
}
#Rijushree Guha
